     1                                      BOOT_LOAD   equ     0x7C00          ; ブートプログラムのロード位置
     2                                  
     3                                      ORG     BOOT_LOAD                   ; ロードアクセスをアセンブラに指示
     4                                  
     5                                  ;********************************************
     6                                  ; マクロ
     7                                  ;********************************************
     8                                  %include    "../include/macro.s"
     1                              <1> %macro  cdecl 1-*.nolist
     2                              <1> 
     3                              <1>     %rep %0 - 1
     4                              <1>         push    %{-1:-1}
     5                              <1>         %rotate -1
     6                              <1>     %endrep
     7                              <1>     %rotate -1
     8                              <1> 
     9                              <1>         call    %1
    10                              <1> 
    11                              <1>     %if 1 < %0
    12                              <1>         add     sp, (__BITS__ >> 3) * (%0 - 1)
    13                              <1>     %endif
    14                              <1> 
    15                              <1> %endmacro
     9                                  
    10                                  ;********************************************
    11                                  ; エントリポイント
    12                                  ;********************************************
    13                                  entry:
    14                                  
    15                                      ;-----------------------------------
    16                                      ; BPB(BIOS Parameter Block)
    17                                      ;-----------------------------------
    18 00000000 EB58                        jmp     ipl                         ; IPLへジャンプ
    19 00000002 90<rept>                    times   90 - ($ - $$) db 0x90       ;
    20                                  
    21                                      ;-----------------------------------
    22                                      ; IPL(Initial Program Loader)
    23                                      ;-----------------------------------
    24                                  ipl:
    25 0000005A FA                          cli                                 ; // 割り込み禁止
    26                                  
    27 0000005B B80000                      mov     ax, 0x0000                  ; AX = 0x0000;
    28 0000005E 8ED8                        mov     ds, ax                      ; DS = 0x0000;
    29 00000060 8EC0                        mov     es, ax                      ; ES = 0x0000;
    30 00000062 8ED0                        mov     ss, ax                      ; SS = 0x0000;
    31 00000064 BC007C                      mov     sp, BOOT_LOAD               ; SP = 0x7C00;
    32                                  
    33 00000067 FB                          sti                                 ; // 割り込み許可
    34                                  
    35 00000068 8816[9200]                  mov     [BOOT.DRIVE], dl            ; ブートドライブを保存
    36                                  
    37                                      ;-----------------------------------
    38                                      ; 文字列を表示
    39                                      ;-----------------------------------
    40 0000006C 68[7A00]E8220083C4-         cdecl   puts, .s0                   ; puts(.s0);
    40 00000074 02                 
    41                                  
    42 00000075 E83B00                      cdecl   reboot                      ; // 戻ってこない
    43                                  
    44                                      ;-----------------------------------
    45                                      ; 処理の終了
    46                                      ;-----------------------------------
    47 00000078 EBFE                        jmp     $                           ; while (1) ; // 無限ループ
    48                                  
    49                                      ;-----------------------------------
    50                                      ; データ
    51                                      ;-----------------------------------
    52 0000007A 426F6F74696E672E2E-     .s0     db  "Booting...", 0x0A, 0x0D, 0
    52 00000083 2E0A0D00           
    53 00000087 2D2D2D2D2D2D2D2D0A-     .s1     db  "--------", 0x0A, 0x0D, 0
    53 00000090 0D00               
    54                                  
    55                                  ALIGN 2, db 0
    56                                  BOOT:                                   ; ブートドライブに関する情報
    57 00000092 0000                    .DRIVE      dw  0                       ; ドライブ番号
    58                                  
    59                                  ;********************************************
    60                                  ; モジュール
    61                                  ;********************************************
    62                                  %include    "../modules/real/puts.s"
     1                              <1> puts:
     2                              <1>         ;-------------------------------
     3                              <1>         ;【スタックフレームの構築】
     4                              <1>         ;-------------------------------
     5                              <1>                                         ;   + 4| 出力文字
     6                              <1>                                         ;   + 2| IP(戻り番地)
     7 00000094 55                  <1>         push    bp                      ; BP+ 0| BP(元の値)
     8 00000095 89E5                <1>         mov     bp, sp                  ;------+---------
     9                              <1> 
    10                              <1>         ;-------------------------------
    11                              <1>         ;【レジスタの保存】
    12                              <1>         ;-------------------------------
    13 00000097 50                  <1>         push    ax
    14 00000098 53                  <1>         push    bx
    15 00000099 56                  <1>         push    si
    16                              <1> 
    17                              <1>         ;-------------------------------
    18                              <1>         ; 引数を取得
    19                              <1>         ;-------------------------------
    20 0000009A 8B7604              <1>         mov     si, [bp + 4]            ; SI = 文字列へのアドレス;
    21                              <1>         
    22                              <1>         ;-------------------------------
    23                              <1>         ;【処理の開始】
    24                              <1>         ;-------------------------------
    25 0000009D B40E                <1>         mov     ah, 0x0E                ; // テレタイプ式1文字出力
    26 0000009F BB0000              <1>         mov     bx, 0x0000              ; // ページ番号と文字色を0に設定
    27 000000A2 FC                  <1>         cld                             ; DF = 0; // アドレス加算
    28                              <1> .10L:                                   ; do
    29                              <1>                                         ; {
    30 000000A3 AC                  <1>         lodsb                           ;   AL = *SI++;
    31                              <1>                                         ;
    32 000000A4 3C00                <1>         cmp     al, 0                   ;   if (0 == AI)
    33 000000A6 7404                <1>         je      .10E                    ;       break;
    34                              <1>                                         ;
    35 000000A8 CD10                <1>         int     0x10                    ;   Int10(0x0E, AL); // 文字出力
    36 000000AA EBF7                <1>         jmp     .10L                    ;
    37                              <1> .10E:                                   ; } while(1);        
    38                              <1>         
    39                              <1>         ;-------------------------------
    40                              <1>         ;【レジスタの復帰】
    41                              <1>         ;-------------------------------
    42 000000AC 5E                  <1>         pop     si
    43 000000AD 5B                  <1>         pop     bx
    44 000000AE 58                  <1>         pop     ax
    45                              <1> 
    46                              <1>         ;-------------------------------
    47                              <1>         ;【スタックフレームの破棄】
    48                              <1>         ;-------------------------------
    49 000000AF 89EC                <1>         mov     sp, bp
    50 000000B1 5D                  <1>         pop     bp
    51                              <1>         
    52 000000B2 C3                  <1>         ret
    63                                  %include    "../modules/real/reboot.s"
     1                              <1> reboot:
     2                              <1>         ;-------------------------------
     3                              <1>         ; メッセージを表示
     4                              <1>         ;-------------------------------
     5 000000B3 68[CF00]E8DBFF83C4- <1>         cdecl   puts, .s0
     5 000000BB 02                  <1>
     6                              <1> 
     7                              <1>         ;-------------------------------
     8                              <1>         ; キー入力待ち
     9                              <1>         ;-------------------------------
    10                              <1> .10L:                                   ; do
    11                              <1>                                         ; {
    12 000000BC B410                <1>         mov     ah, 0x10                ;   // キー入力待ち
    13 000000BE CD16                <1>         int     0x016                   ;   AL = BIOS(0x16, 0x10);
    14                              <1>                                         ;
    15 000000C0 3C20                <1>         cmp     al, ' '                 ;   ZF = AL == ' ';
    16 000000C2 75F8                <1>         jne     .10L                    ; } while (!ZF);
    17                              <1> 
    18                              <1>         ;-------------------------------
    19                              <1>         ; 改行を出力
    20                              <1>         ;-------------------------------
    21 000000C4 68[ED00]E8CAFF83C4- <1>         cdecl   puts, .s1               ; 改行
    21 000000CC 02                  <1>
    22                              <1>         
    23                              <1>         ;-------------------------------
    24                              <1>         ; 再起動
    25                              <1>         ;-------------------------------
    26 000000CD CD19                <1>         int     0x19                    ; BIOS(0x19);   // reboot()     
    27                              <1>         
    28                              <1>         ;-------------------------------
    29                              <1>         ; 文字列データ
    30                              <1>         ;-------------------------------
    31 000000CF 0A0D50757368205350- <1> .s0     db  0x0A, 0x0D, "Push SPACE key to reboot...", 0
    31 000000D8 414345206B65792074- <1>
    31 000000E1 6F207265626F6F742E- <1>
    31 000000EA 2E2E00              <1>
    32 000000ED 0A0D0A0D00          <1> .s1     db  0x0A, 0x0D, 0x0A, 0x0D, 0
    33                              <1>         
    64                                  
    65                                  ;********************************************
    66                                  ; ブートフラグ(先頭512バイトの終了)
    67                                  ;********************************************
    68 000000F2 00<rept>                    times   510 - ($ - $$) db 0x00
    69 000001FE 55AA                        db  0x55, 0xAA
